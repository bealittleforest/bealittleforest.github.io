<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>UCode社团前端教学1-2</title>
      <link href="/2019/11/29/UCode%E7%A4%BE%E5%9B%A2%E5%89%8D%E7%AB%AF%E6%95%99%E5%AD%A61-2/"/>
      <url>/2019/11/29/UCode%E7%A4%BE%E5%9B%A2%E5%89%8D%E7%AB%AF%E6%95%99%E5%AD%A61-2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><ul><li>组件化思维</li><li>案例分析</li><li>CSS进阶</li><li>SASS</li></ul><h2 id="课前准备"><a href="#课前准备" class="headerlink" title="课前准备"></a>课前准备</h2><ul><li>了解基础的css语法、属性：<a href="https://www.w3school.com.cn/css/index.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/css/index.asp</a></li></ul><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><ul><li>组件化设计与开发的思维方式：<a href="https://www.uisdc.com/component-based-design-and-development#" target="_blank" rel="noopener">https://www.uisdc.com/component-based-design-and-development#</a></li><li>Flex布局：<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool</a></li><li>SASS快速入门：<a href="https://www.sass.hk/guide/" target="_blank" rel="noopener">https://www.sass.hk/guide/</a></li><li>codepen：<a href="https://codepen.io/pen/" target="_blank" rel="noopener">https://codepen.io/pen/</a></li></ul><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="组件化思维"><a href="#组件化思维" class="headerlink" title="组件化思维"></a>组件化思维</h3><h4 id="什么是组件化？"><a href="#什么是组件化？" class="headerlink" title="什么是组件化？"></a>什么是组件化？</h4><p>我们知道“分子是由原子组成的，分子分成原子，原子也可以重新组合成新的分子”。一个界面是由独立的分子组件搭建而成，分子组件由原子元件构成，这些原子可通过不同的组合方式，组成新分子组件，继而重组构成新的界面。</p><p>从开发角度来说，组件就是一段具有独立功能的代码。而我们的网页就是由许多这样的组件组成。</p><h4 id="组件化的特点"><a href="#组件化的特点" class="headerlink" title="组件化的特点"></a>组件化的特点</h4><p><img alt data-src="https://image.uisdc.com/wp-content/uploads/2017/03/uisdc-design-20170319-2.png" class="lazyload"><br>组件化的工作方式信奉独立、完整、自由组合。目标就是尽可能把设计与开发中的元素独立化，使它具备完整的局部功能，通过自由组合来构成整个产品。</p><h4 id="组件化对开发的意义"><a href="#组件化对开发的意义" class="headerlink" title="组件化对开发的意义"></a>组件化对开发的意义</h4><ul><li><p>降低耦合度<br><img alt data-src="https://image.uisdc.com/wp-content/uploads/2017/03/uisdc-design-20170319-11.png" class="lazyload"><br>耦合度是指模块间的关联程度的度量。<br>模块间的耦合度是指模块之间的依赖关系，包括控制关系、调用关系、数据传递关系。</p></li><li><p>减少冗余<br><img alt data-src="https://image.uisdc.com/wp-content/uploads/2017/03/uisdc-design-20170319-12.png" class="lazyload"><br>多余的重复或啰嗦内容（包括信息、语言、代码、结构、服务、软件、硬件等等）均称为冗余。</p></li><li><p>优化性能<br><img alt data-src="https://image.uisdc.com/wp-content/uploads/2017/03/uisdc-design-20170319-13.png" class="lazyload"></p></li><li><p>便于多开发协作<br><img alt data-src="https://image.uisdc.com/wp-content/uploads/2017/03/uisdc-design-20170319-14-1.png" class="lazyload"></p></li><li><p>便于查错<br><img alt data-src="https://image.uisdc.com/wp-content/uploads/2017/03/uisdc-design-20170319-15.png" class="lazyload"><br>如果页面上出现问题，可以找出每个可能有关的组件，逐个拔除，直到恢复正常。这样就能迅速锁定错误发生的位置。同时组件内也可以形成完整的自测单元，也方便了测试工作。</p></li><li><p>便于修改<br><img alt data-src="https://image.uisdc.com/wp-content/uploads/2017/03/uisdc-design-20170319-16.png" class="lazyload"></p></li></ul><h3 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h3><p><a href="ttps://weibo.com/u/1669879400?topnav=1&wvr=6&topsug=1&is_hot=1" target="_blank" rel="noopener">微博个人主页</a></p><h3 id="CSS进阶"><a href="#CSS进阶" class="headerlink" title="CSS进阶"></a>CSS进阶</h3><h4 id="css单位"><a href="#css单位" class="headerlink" title="css单位"></a>css单位</h4><ul><li><p>尺寸<br>相对单位：相对长度单位指定了一个长度相对于另一个长度的属性。对于不同的设备相对长度更适用。<br>绝对单位：绝对长度单位是一个固定的值，它反应一个真实的物理尺寸。绝对长度单位视输出介质而定，不依赖于环境（显示器、分辨率、操作系统等）。</p></li><li><p>颜色<br>CSS 颜色使用组合了红绿蓝颜色值 (RGB) 的十六进制 (hex) 表示法进行定义。对光源进行设置的最低值可以是 0（十六进制 00）。最高值是 255（十六进制 FF）。十六进制值使用三个双位数来编写，并以 # 符号开头。</p></li></ul><h4 id="flex布局应用"><a href="#flex布局应用" class="headerlink" title="flex布局应用"></a>flex布局应用</h4><p><img alt data-src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071004.png" class="lazyload"><br>Flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。<br>任何一个容器都可以指定为 Flex 布局。</p><ul><li><p>flex-direction属性决定主轴的方向（即项目的排列方向）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  flex-direction: row | row-reverse | column | column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071005.png" class="lazyload"></p></li><li><p>justify-content属性定义了项目在主轴上的对齐方式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  justify-content: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071010.png" class="lazyload"></p></li><li><p>align-items属性定义项目在交叉轴上如何对齐。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  align-items: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071011.png" class="lazyload"></p></li></ul><h3 id="SASS"><a href="#SASS" class="headerlink" title="SASS"></a>SASS</h3><h4 id="嵌套css"><a href="#嵌套css" class="headerlink" title="嵌套css"></a>嵌套css</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;content&quot;&gt;</span><br><span class="line">    &lt;article&gt;</span><br><span class="line">    &lt;h1&gt;H1标题&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;段落&lt;/p&gt;</span><br><span class="line">  &lt;/article&gt;</span><br><span class="line">  &lt;aside&gt;&lt;/aside&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>css中重复写选择器是非常恼人的。如果要写一大串指向页面中同一块的样式时，往往需要 一遍又一遍地写同一个id。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#content article h1 &#123; color: #333 &#125;</span><br><span class="line">#content article p &#123; margin-bottom: 1.4em &#125;</span><br><span class="line">#content aside &#123; background-color: #EEE &#125;</span><br></pre></td></tr></table></figure><p>像这种情况，sass可以让你只写一遍，且使样式可读性更高。在Sass中，你可以像俄罗斯套娃那样在规则块中嵌套规则块。sass在输出css时会帮你把这些嵌套规则处理好，避免你的重复书写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#content &#123;</span><br><span class="line">  article &#123;</span><br><span class="line">    h1 &#123; color: #333 &#125;</span><br><span class="line">    p &#123; margin-bottom: 1.4em &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  aside &#123; background-color: #EEE &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>本文部分图片及代码转载自 <a href="https://www.uisdc.com/component-based-design-and-development#" target="_blank" rel="noopener">https://www.uisdc.com/component-based-design-and-development#</a> 及 <a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool</a></em></p>]]></content>
      
      
      
        <tags>
            
            <tag> 社团前端教学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UCode社团前端教学1-1</title>
      <link href="/2019/11/29/UCode%E7%A4%BE%E5%9B%A2%E5%89%8D%E7%AB%AF%E6%95%99%E5%AD%A61-1/"/>
      <url>/2019/11/29/UCode%E7%A4%BE%E5%9B%A2%E5%89%8D%E7%AB%AF%E6%95%99%E5%AD%A61-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><ul><li>了解前端概念</li><li>网页结构分析</li><li>了解vue框架</li></ul><h2 id="课前准备"><a href="#课前准备" class="headerlink" title="课前准备"></a>课前准备</h2><ul><li>安装开发环境 Visual Studio Code：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></li><li>Vue如何新建一个项目：<a href="https://www.jianshu.com/p/02b12c600c7b" target="_blank" rel="noopener">https://www.jianshu.com/p/02b12c600c7b</a></li><li>Node.js：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></li></ul><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><ul><li>Web 入门 - 学习Web开发 | MDN：<a href="https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web</a></li><li>Vscode 小白使用介绍：<a href="https://www.cnblogs.com/tu-0718/p/10935910.html" target="_blank" rel="noopener">https://www.cnblogs.com/tu-0718/p/10935910.html</a></li><li>Vue教程：<a href="https://www.runoob.com/vue2/vue-tutorial.html" target="_blank" rel="noopener">https://www.runoob.com/vue2/vue-tutorial.html</a></li><li>Web语义化：<a href="https://segmentfault.com/a/1190000013949395" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013949395</a></li></ul><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><h4 id="前端是什么？"><a href="#前端是什么？" class="headerlink" title="前端是什么？"></a>前端是什么？</h4><p>即网站前台，简单的来说就是我们日常生活中所浏览的网页。</p><h4 id="前端分类"><a href="#前端分类" class="headerlink" title="前端分类"></a>前端分类</h4><p>前端可以分为两类，一类是前端设计，另一类是前端开发。</p><p>前端设计是设计师根据需求通过PS软件设计网页，将网页以psd文件格式展示出来。<br>前端开发是工程师通过HTML和CSS将设计师所设计的网页以代码的形式实现，并使用JS完善网页需求。<br>而我们要学习的就是前端开发。</p><p>HTML——网页内容<br>CSS——网页样式<br>JS——网页交互</p><h4 id="Web语义化"><a href="#Web语义化" class="headerlink" title="Web语义化"></a>Web语义化</h4><p>Web语义化是指使用恰当语义的html标签、class类名等内容，让页面具有良好的结构与含义，从而让人和机器都能快速理解网页内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;article&gt;</span><br><span class="line">            &lt;header&gt;</span><br><span class="line">                &lt;h1&gt;h1 - WEB 语义化&lt;/h1&gt;</span><br><span class="line">            &lt;/header&gt;</span><br><span class="line">            &lt;nav&gt;</span><br><span class="line">                &lt;ul&gt;</span><br><span class="line">                    &lt;li&gt;nav1 - HTML语义化&lt;/li&gt;</span><br><span class="line">                    &lt;li&gt;nav2 - CSS语义化&lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/nav&gt;</span><br><span class="line">            &lt;section&gt;</span><br><span class="line">                section1 - HTML语义化</span><br><span class="line">            &lt;/section&gt;</span><br><span class="line">            &lt;section&gt;</span><br><span class="line">                section2 - CSS语义化</span><br><span class="line">            &lt;/section&gt;</span><br><span class="line">            &lt;footer&gt; footer&lt;/footer&gt;</span><br><span class="line">        &lt;/article&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h4><p><img alt data-src="/img/%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7.PNG" class="lazyload"><br>基本上所有的浏览器都会有开发者工具（快捷键F12），它能帮助我们进行前端开发，也能让我们学习、借鉴其他优秀的网页结构、样式。</p><h3 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h3><p>在网页开发之前，我们需要对网页进行分析，便于使我们的HTML部分结构更加清晰。</p><h4 id="常用HTML元素"><a href="#常用HTML元素" class="headerlink" title="常用HTML元素"></a>常用HTML元素</h4><p>块级元素：<code>&lt;div&gt;、&lt;input&gt;、&lt;form&gt;、&lt;button&gt;、&lt;img&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;</code><br>内联元素：<code>&lt;span&gt;、&lt;a&gt;、&lt;label&gt;</code></p><h4 id="CSS语法"><a href="#CSS语法" class="headerlink" title="CSS语法"></a>CSS语法</h4><p>选择器，以及一条或多条声明：<br><img alt data-src="https://www.runoob.com/wp-content/uploads/2013/07/632877C9-2462-41D6-BD0E-F7317E4C42AC.jpg" class="lazyload"> </p><p>盒模型<br><img alt data-src="https://www.runoob.com/images/box-model.gif" class="lazyload"><br>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。 </p><h4 id="QQ注册页面"><a href="#QQ注册页面" class="headerlink" title="QQ注册页面"></a>QQ注册页面</h4><p><a href="https://ssl.zc.qq.com/v3/index-chs.html" target="_blank" rel="noopener">网页链接</a></p><h3 id="Vue框架"><a href="#Vue框架" class="headerlink" title="Vue框架"></a>Vue框架</h3><h4 id="三大组件"><a href="#三大组件" class="headerlink" title="三大组件"></a>三大组件</h4><p>正如我们所知的一个基础的网页由.html文件、.css 文件、.js文件三部分组成，而使用Vue框架将这三个部分集成到一个.vue文件让网页开发更加简洁。</p><h4 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h4><p>template用于编写HTML模板，且内部必须有一个根元素，否则会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        ......</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="Script"><a href="#Script" class="headerlink" title="Script"></a>Script</h4><p>script用于编写JavaScript代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    import HelloWorld from &apos;./components/HelloWorld.vue&apos;</span><br><span class="line">    export default &#123;</span><br><span class="line">    name: &quot;app&quot;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        HelloWorld</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h4><p>style用于编写css样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    #app &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">        color: #2c3e50;</span><br><span class="line">        margin-top: 60px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 社团前端教学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github饿了吗———city页面技术总结01</title>
      <link href="/2019/11/29/github%E9%A5%BF%E4%BA%86%E5%90%97-city%E9%A1%B5%E9%9D%A2%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%9301/"/>
      <url>/2019/11/29/github%E9%A5%BF%E4%BA%86%E5%90%97-city%E9%A1%B5%E9%9D%A2%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%9301/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="v-on修饰词"><a href="#v-on修饰词" class="headerlink" title="v-on修饰词"></a>v-on修饰词</h2><p>1.prevent 不再重载页面<br>2.stop<br>3.capture<br>4.self<br>5.once<br>6.passive</p><h2 id="slot插槽"><a href="#slot插槽" class="headerlink" title="slot插槽"></a>slot插槽</h2><p>插槽用于决定所携带的内容，插入到指定的某个位置，从而使模板分块，具有模块化的特质和更大的重用性。</p><h2 id="router-link"><a href="#router-link" class="headerlink" title="router-link"></a>router-link</h2><p><router-link to="/xx">等价于router.push({path:”/xx”})</p><h2 id="script导入"><a href="#script导入" class="headerlink" title="script导入"></a>script导入</h2><p>导入同一文件中的不同方法可以将方法用{}括起来”,”分隔。</p><h2 id="“-”符号"><a href="#“-”符号" class="headerlink" title="“$”符号"></a>“$”符号</h2><p>“$”，以便与用户定义的属性区分开来.</p><p>(您会注意到，我们将库代理为以美元符号“$”为前缀的属性名。 你可能还看过其他的属性和方法，例如，$refs, $on, $mount等等也都是以”$”开头。<br>虽然属性名上添加前缀不是必须的，但是这样做可以提醒糊涂的开发人员（可能是你），这是一个公共API属性或方法，欢迎你使用，不像其他属性的实例，可能只是为了 Vue 的内部使用。<br>作为基于原型的语言，Javascript 中没有（真正的）类，因此也没有 “私有” 和 “公共” 变量或 “静态” 方法。 这个惯例是一种很好的替代品，我们认为是值得遵守的约定。)</p>]]></content>
      
      
      
        <tags>
            
            <tag> 饿了吗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/21/hello-world/"/>
      <url>/2019/11/21/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
