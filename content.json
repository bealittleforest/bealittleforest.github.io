{"meta":{"title":"Bunny","subtitle":"","description":"","author":"秃头 Bunny","url":"https://bealittleforest.github.io","root":"/"},"pages":[{"title":"分类","date":"2019-11-29T04:36:01.000Z","updated":"2019-11-29T04:36:54.096Z","comments":true,"path":"categories/index.html","permalink":"https://bealittleforest.github.io/categories/index.html","excerpt":"","text":""},{"title":"社团前端教学","date":"2019-11-29T07:32:32.000Z","updated":"2019-11-29T07:57:03.940Z","comments":true,"path":"tags/Ucode.html","permalink":"https://bealittleforest.github.io/tags/Ucode.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-11-29T04:37:16.000Z","updated":"2019-11-29T04:37:54.601Z","comments":true,"path":"link/index.html","permalink":"https://bealittleforest.github.io/link/index.html","excerpt":"","text":""},{"title":"饿了吗","date":"2019-11-29T04:32:32.000Z","updated":"2019-11-29T07:57:05.831Z","comments":true,"path":"tags/index.html","permalink":"https://bealittleforest.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"UCode社团前端教学1-2","slug":"UCode社团前端教学1-2","date":"2019-11-29T09:02:09.852Z","updated":"2019-11-29T09:39:07.290Z","comments":true,"path":"2019/11/29/UCode社团前端教学1-2/","link":"","permalink":"https://bealittleforest.github.io/2019/11/29/UCode%E7%A4%BE%E5%9B%A2%E5%89%8D%E7%AB%AF%E6%95%99%E5%AD%A61-2/","excerpt":"","text":"主要内容 组件化思维 案例分析 CSS进阶 SASS 课前准备 了解基础的css语法、属性：https://www.w3school.com.cn/css/index.asp 学习资料 组件化设计与开发的思维方式：https://www.uisdc.com/component-based-design-and-development# Flex布局：http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool SASS快速入门：https://www.sass.hk/guide/ codepen：https://codepen.io/pen/ 内容组件化思维什么是组件化？我们知道“分子是由原子组成的，分子分成原子，原子也可以重新组合成新的分子”。一个界面是由独立的分子组件搭建而成，分子组件由原子元件构成，这些原子可通过不同的组合方式，组成新分子组件，继而重组构成新的界面。 从开发角度来说，组件就是一段具有独立功能的代码。而我们的网页就是由许多这样的组件组成。 组件化的特点组件化的工作方式信奉独立、完整、自由组合。目标就是尽可能把设计与开发中的元素独立化，使它具备完整的局部功能，通过自由组合来构成整个产品。 组件化对开发的意义 降低耦合度耦合度是指模块间的关联程度的度量。模块间的耦合度是指模块之间的依赖关系，包括控制关系、调用关系、数据传递关系。 减少冗余多余的重复或啰嗦内容（包括信息、语言、代码、结构、服务、软件、硬件等等）均称为冗余。 优化性能 便于多开发协作 便于查错如果页面上出现问题，可以找出每个可能有关的组件，逐个拔除，直到恢复正常。这样就能迅速锁定错误发生的位置。同时组件内也可以形成完整的自测单元，也方便了测试工作。 便于修改 案例分析微博个人主页 CSS进阶css单位 尺寸相对单位：相对长度单位指定了一个长度相对于另一个长度的属性。对于不同的设备相对长度更适用。绝对单位：绝对长度单位是一个固定的值，它反应一个真实的物理尺寸。绝对长度单位视输出介质而定，不依赖于环境（显示器、分辨率、操作系统等）。 颜色CSS 颜色使用组合了红绿蓝颜色值 (RGB) 的十六进制 (hex) 表示法进行定义。对光源进行设置的最低值可以是 0（十六进制 00）。最高值是 255（十六进制 FF）。十六进制值使用三个双位数来编写，并以 # 符号开头。 flex布局应用Flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为 Flex 布局。 flex-direction属性决定主轴的方向（即项目的排列方向）。 123.box &#123; flex-direction: row | row-reverse | column | column-reverse;&#125; justify-content属性定义了项目在主轴上的对齐方式。 123.box &#123; justify-content: flex-start | flex-end | center | space-between | space-around;&#125; align-items属性定义项目在交叉轴上如何对齐。 123.box &#123; align-items: flex-start | flex-end | center | baseline | stretch;&#125; SASS嵌套css1234567&lt;div id=&quot;content&quot;&gt; &lt;article&gt; &lt;h1&gt;H1标题&lt;/h1&gt; &lt;p&gt;段落&lt;/p&gt; &lt;/article&gt; &lt;aside&gt;&lt;/aside&gt;&lt;/div&gt; css中重复写选择器是非常恼人的。如果要写一大串指向页面中同一块的样式时，往往需要 一遍又一遍地写同一个id。 123#content article h1 &#123; color: #333 &#125;#content article p &#123; margin-bottom: 1.4em &#125;#content aside &#123; background-color: #EEE &#125; 像这种情况，sass可以让你只写一遍，且使样式可读性更高。在Sass中，你可以像俄罗斯套娃那样在规则块中嵌套规则块。sass在输出css时会帮你把这些嵌套规则处理好，避免你的重复书写。 1234567#content &#123; article &#123; h1 &#123; color: #333 &#125; p &#123; margin-bottom: 1.4em &#125; &#125; aside &#123; background-color: #EEE &#125;&#125; 本文部分图片及代码转载自 https://www.uisdc.com/component-based-design-and-development# 及 http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool","categories":[],"tags":[{"name":"社团前端教学","slug":"社团前端教学","permalink":"https://bealittleforest.github.io/tags/%E7%A4%BE%E5%9B%A2%E5%89%8D%E7%AB%AF%E6%95%99%E5%AD%A6/"}]},{"title":"UCode社团前端教学1-1","slug":"UCode社团前端教学1-1","date":"2019-11-29T08:03:02.712Z","updated":"2019-11-29T09:39:57.361Z","comments":true,"path":"2019/11/29/UCode社团前端教学1-1/","link":"","permalink":"https://bealittleforest.github.io/2019/11/29/UCode%E7%A4%BE%E5%9B%A2%E5%89%8D%E7%AB%AF%E6%95%99%E5%AD%A61-1/","excerpt":"","text":"主要内容 了解前端概念 网页结构分析 了解vue框架 课前准备 安装开发环境 Visual Studio Code：https://code.visualstudio.com/ Vue如何新建一个项目：https://www.jianshu.com/p/02b12c600c7b Node.js：https://nodejs.org/en/ 学习资料 Web 入门 - 学习Web开发 | MDN：https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web Vscode 小白使用介绍：https://www.cnblogs.com/tu-0718/p/10935910.html Vue教程：https://www.runoob.com/vue2/vue-tutorial.html Web语义化：https://segmentfault.com/a/1190000013949395 内容前端前端是什么？即网站前台，简单的来说就是我们日常生活中所浏览的网页。 前端分类前端可以分为两类，一类是前端设计，另一类是前端开发。 前端设计是设计师根据需求通过PS软件设计网页，将网页以psd文件格式展示出来。前端开发是工程师通过HTML和CSS将设计师所设计的网页以代码的形式实现，并使用JS完善网页需求。而我们要学习的就是前端开发。 HTML——网页内容CSS——网页样式JS——网页交互 Web语义化Web语义化是指使用恰当语义的html标签、class类名等内容，让页面具有良好的结构与含义，从而让人和机器都能快速理解网页内容。 12345678910111213141516171819202122&lt;html&gt; &lt;body&gt; &lt;article&gt; &lt;header&gt; &lt;h1&gt;h1 - WEB 语义化&lt;/h1&gt; &lt;/header&gt; &lt;nav&gt; &lt;ul&gt; &lt;li&gt;nav1 - HTML语义化&lt;/li&gt; &lt;li&gt;nav2 - CSS语义化&lt;/li&gt; &lt;/ul&gt; &lt;/nav&gt; &lt;section&gt; section1 - HTML语义化 &lt;/section&gt; &lt;section&gt; section2 - CSS语义化 &lt;/section&gt; &lt;footer&gt; footer&lt;/footer&gt; &lt;/article&gt; &lt;/body&gt;&lt;/html&gt; 开发者工具基本上所有的浏览器都会有开发者工具（快捷键F12），它能帮助我们进行前端开发，也能让我们学习、借鉴其他优秀的网页结构、样式。 案例分析在网页开发之前，我们需要对网页进行分析，便于使我们的HTML部分结构更加清晰。 常用HTML元素块级元素：&lt;div&gt;、&lt;input&gt;、&lt;form&gt;、&lt;button&gt;、&lt;img&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;内联元素：&lt;span&gt;、&lt;a&gt;、&lt;label&gt; CSS语法选择器，以及一条或多条声明： 盒模型CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。 QQ注册页面网页链接 Vue框架三大组件正如我们所知的一个基础的网页由.html文件、.css 文件、.js文件三部分组成，而使用Vue框架将这三个部分集成到一个.vue文件让网页开发更加简洁。 Templatetemplate用于编写HTML模板，且内部必须有一个根元素，否则会报错。 12345&lt;template&gt; &lt;div id=&quot;app&quot;&gt; ...... &lt;/div&gt;&lt;/template&gt; Scriptscript用于编写JavaScript代码。 123456789&lt;script&gt; import HelloWorld from &apos;./components/HelloWorld.vue&apos; export default &#123; name: &quot;app&quot;, components: &#123; HelloWorld &#125; &#125;&lt;/script&gt; Stylestyle用于编写css样式。 1234567&lt;style&gt; #app &#123; text-align: center; color: #2c3e50; margin-top: 60px; &#125;&lt;/style&gt;","categories":[],"tags":[{"name":"社团前端教学","slug":"社团前端教学","permalink":"https://bealittleforest.github.io/tags/%E7%A4%BE%E5%9B%A2%E5%89%8D%E7%AB%AF%E6%95%99%E5%AD%A6/"}]},{"title":"github饿了吗———city页面技术总结01","slug":"github饿了吗-city页面技术总结01","date":"2019-11-29T03:23:27.319Z","updated":"2019-11-29T10:23:53.372Z","comments":true,"path":"2019/11/29/github饿了吗-city页面技术总结01/","link":"","permalink":"https://bealittleforest.github.io/2019/11/29/github%E9%A5%BF%E4%BA%86%E5%90%97-city%E9%A1%B5%E9%9D%A2%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%9301/","excerpt":"","text":"v-on修饰词1.prevent 不再重载页面2.stop3.capture4.self5.once6.passive slot插槽插槽用于决定所携带的内容，插入到指定的某个位置，从而使模板分块，具有模块化的特质和更大的重用性。 router-link等价于router.push({path:”/xx”}) script导入导入同一文件中的不同方法可以将方法用{}括起来”,”分隔。 “$”符号“$”，以便与用户定义的属性区分开来. (您会注意到，我们将库代理为以美元符号“$”为前缀的属性名。 你可能还看过其他的属性和方法，例如，$refs, $on, $mount等等也都是以”$”开头。虽然属性名上添加前缀不是必须的，但是这样做可以提醒糊涂的开发人员（可能是你），这是一个公共API属性或方法，欢迎你使用，不像其他属性的实例，可能只是为了 Vue 的内部使用。作为基于原型的语言，Javascript 中没有（真正的）类，因此也没有 “私有” 和 “公共” 变量或 “静态” 方法。 这个惯例是一种很好的替代品，我们认为是值得遵守的约定。)","categories":[],"tags":[{"name":"饿了吗","slug":"饿了吗","permalink":"https://bealittleforest.github.io/tags/%E9%A5%BF%E4%BA%86%E5%90%97/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-11-21T09:26:07.356Z","updated":"2019-11-21T09:26:07.357Z","comments":true,"path":"2019/11/21/hello-world/","link":"","permalink":"https://bealittleforest.github.io/2019/11/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}